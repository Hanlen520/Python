#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# by author: Crisimple
# description: 正则表达式
# 正则表达式是一种用来匹配字符串的强有力的武器
# 用\d可以匹配一个数字
# \w可以匹配一个字母或数字
# .可以匹配任意字符
# 要匹配变长的字符，在正则表达式中，用*表示任意个字符（包括0个）
# 用+表示至少一个字符
# 用?表示0个或1个字符
# 用{n}表示n个字符
# 用{n,m}表示n-m个字符
# \s可以匹配一个空格（也包括Tab等空白符），所以\s+表示至少有一个空格

# 进阶
# [0-9a-zA-Z\_]可以匹配一个数字、字母或者下划线；
# [0-9a-zA-Z\_]+可以匹配至少由一个数字、字母或者下划线组成的字符串，比如'a100'，'0_Z'，'Py3000'等等；
# [a-zA-Z\_][0-9a-zA-Z\_]*可以匹配由字母或下划线开头，后接任意个由一个数字、字母或者下划线组成的字符串，也就是Python合法的变量；
# [a-zA-Z\_][0-9a-zA-Z\_]{0, 19}更精确地限制了变量的长度是1-20个字符（前面1个字符+后面最多19个字符）
# A|B可以匹配A或B，所以(P|p)ython可以匹配'Python'或者'python'
# ^表示行的开头，^\d表示必须以数字开头
# $表示行的结束，\d$表示必须以数字结束

# re模块

# 切分字符串
# re.split(r'[\s\,]+', 'a,b, c  d')
# ['a', 'b', 'c', 'd']

# 分组
# 正则表达式还有提取子串的强大功能。用()表示的就是要提取的分组（Group）。

# 贪婪匹配

# 编译